{"filter":false,"title":"fooditem.h","tooltip":"/PRO04/fooditem.h","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["#ifndef FOODITEM_H","#define FOODITEM_H","","#include <iostream>","#include <string>","","class FoodItem {","private:","    std::string name;","    double calories;","    double totalFat;","    double totalSugars;","    double protein;","    double sodium;","","public:","    FoodItem();","    FoodItem(std::string name, double calories, double totalFat, double totalSugars, double protein, double sodium);","","    // Accessors","    std::string getName() const;","    double getCalories() const;","    double getTotalFat() const;","    double getTotalSugars() const;","    double getProtein() const;","    double getSodium() const;","","    // Mutators","    void setName(std::string name);","    void setCalories(double calories);","    void setTotalFat(double totalFat);","    void setTotalSugars(double totalSugars);","    void setProtein(double protein);","    void setSodium(double sodium);","","    // Addition operator overloading","    FoodItem operator+(const FoodItem& other) const;","};","","#endif",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["#ifndef FOODITEM_H","#define FOODITEM_H","","#include <iostream>","#include <string>","","class FoodItem {","private:","    std::string name;","    double calories;","    double totalFat;","    double totalSugars;","    double protein;","    double sodium;","","public:","    FoodItem();","    FoodItem(std::string name, double calories, double totalFat, double totalSugars, double protein, double sodium);","","    // Accessors","    std::string getName() const;","    double getCalories() const;","    double getTotalFat() const;","    double getTotalSugars() const;","    double getProtein() const;","    double getSodium() const;","","    // Mutators","    void setName(std::string name);","    void setCalories(double calories);","    void setTotalFat(double totalFat);","    void setTotalSugars(double totalSugars);","    void setProtein(double protein);","    void setSodium(double sodium);","","    // Addition operator overloading","    FoodItem operator+(const FoodItem& other) const;","};","","#endif",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["#ifndef FOODITEM_H","#define FOODITEM_H","","#include <iostream>","#include <string>","","class FoodItem {","private:","    std::string name;","    double calories;","    double totalFat;","    double totalSugars;","    double protein;","    double sodium;","","public:","    FoodItem();","    FoodItem(std::string name, double calories, double totalFat, double totalSugars, double protein, double sodium);","","    // Accessors","    std::string getName() const;","    double getCalories() const;","    double getTotalFat() const;","    double getTotalSugars() const;","    double getProtein() const;","    double getSodium() const;","","    // Mutators","    void setName(std::string name);","    void setCalories(double calories);","    void setTotalFat(double totalFat);","    void setTotalSugars(double totalSugars);","    void setProtein(double protein);","    void setSodium(double sodium);","","    // Addition operator overloading","    FoodItem operator+(const FoodItem& other) const;","};","","#endif",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":40,"column":0},"end":{"row":40,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1689652381092,"hash":"251b787548bd5b8ef42353792d09fae7c07db929"}