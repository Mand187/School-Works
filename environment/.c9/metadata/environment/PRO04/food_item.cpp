{"filter":false,"title":"food_item.cpp","tooltip":"/PRO04/food_item.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["#include \"food_item.h\"","","FoodItem::FoodItem() {","    calories = 0;","    totalFat = 0;","    totalSugars = 0;","    protein = 0;","    sodium = 0;","}","","FoodItem::FoodItem(const std::string& name, int calories, int totalFat, int totalSugars, int protein, int sodium) {","    this->name = name;","    this->calories = calories;","    this->totalFat = totalFat;","    this->totalSugars = totalSugars;","    this->protein = protein;","    this->sodium = sodium;","}","","std::string FoodItem::getName() const {","    return name;","}","","int FoodItem::getCalories() const {","    return calories;","}","","int FoodItem::getTotalFat() const {","    return totalFat;","}","","int FoodItem::getTotalSugars() const {","    return totalSugars;","}","","int FoodItem::getProtein() const {","    return protein;","}","","int FoodItem::getSodium() const {","    return sodium;","}","","FoodItem FoodItem::operator+(const FoodItem& other) {","    FoodItem result;","    result.name = \"Combined\";","    result.calories = calories + other.calories;","    result.totalFat = totalFat + other.totalFat;","    result.totalSugars = totalSugars + other.totalSugars;","    result.protein = protein + other.protein;","    result.sodium = sodium + other.sodium;","    return result;","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":53,"column":0},"end":{"row":53,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1689603149638,"hash":"a16a6ee3f69cf279657812ecdfc41f30ef0e8382"}