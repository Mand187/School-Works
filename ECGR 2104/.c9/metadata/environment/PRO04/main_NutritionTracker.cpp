{"filter":false,"title":"main_NutritionTracker.cpp","tooltip":"/PRO04/main_NutritionTracker.cpp","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["        cout << \"| Nutrition Tracker  |\" << endl;",""],"id":487}],[{"start":{"row":12,"column":18},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":488},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":8},"action":"remove","lines":["    "],"id":489}],[{"start":{"row":13,"column":4},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":490},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":4},"end":{"row":15,"column":0},"action":"insert","lines":["        cout << \"| Nutrition Tracker  |\" << endl;",""],"id":491}],[{"start":{"row":14,"column":10},"end":{"row":14,"column":11},"action":"remove","lines":[" "],"id":492},{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"remove","lines":[" "]},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"remove","lines":[" "]},{"start":{"row":14,"column":4},"end":{"row":14,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"remove","lines":["        cout << \"Greetings \" << iUser << \", this program displays a list of food items and calculates nutrition values.\" << endl;",""],"id":493}],[{"start":{"row":14,"column":46},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":494},{"start":{"row":15,"column":0},"end":{"row":15,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":15,"column":5},"end":{"row":16,"column":0},"action":"insert","lines":["        cout << \"Greetings \" << iUser << \", this program displays a list of food items and calculates nutrition values.\" << endl;",""],"id":495}],[{"start":{"row":15,"column":12},"end":{"row":15,"column":13},"action":"remove","lines":[" "],"id":496},{"start":{"row":15,"column":8},"end":{"row":15,"column":12},"action":"remove","lines":["    "]},{"start":{"row":15,"column":4},"end":{"row":15,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":5},"action":"remove","lines":[" "],"id":497}],[{"start":{"row":27,"column":46},"end":{"row":27,"column":47},"action":"remove","lines":["<"],"id":498},{"start":{"row":27,"column":45},"end":{"row":27,"column":46},"action":"remove","lines":["<"]},{"start":{"row":27,"column":44},"end":{"row":27,"column":45},"action":"remove","lines":[" "]},{"start":{"row":27,"column":43},"end":{"row":27,"column":44},"action":"remove","lines":["\""]},{"start":{"row":27,"column":42},"end":{"row":27,"column":43},"action":"remove","lines":["s"]},{"start":{"row":27,"column":41},"end":{"row":27,"column":42},"action":"remove","lines":["e"]},{"start":{"row":27,"column":40},"end":{"row":27,"column":41},"action":"remove","lines":["e"]},{"start":{"row":27,"column":39},"end":{"row":27,"column":40},"action":"remove","lines":["y"]},{"start":{"row":27,"column":38},"end":{"row":27,"column":39},"action":"remove","lines":["o"]},{"start":{"row":27,"column":37},"end":{"row":27,"column":38},"action":"remove","lines":["l"]},{"start":{"row":27,"column":36},"end":{"row":27,"column":37},"action":"remove","lines":["p"]},{"start":{"row":27,"column":35},"end":{"row":27,"column":36},"action":"remove","lines":["m"]},{"start":{"row":27,"column":34},"end":{"row":27,"column":35},"action":"remove","lines":["E"]},{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"remove","lines":[" "]},{"start":{"row":27,"column":32},"end":{"row":27,"column":33},"action":"remove","lines":["f"]},{"start":{"row":27,"column":31},"end":{"row":27,"column":32},"action":"remove","lines":["o"]},{"start":{"row":27,"column":30},"end":{"row":27,"column":31},"action":"remove","lines":[" "]},{"start":{"row":27,"column":29},"end":{"row":27,"column":30},"action":"remove","lines":["t"]},{"start":{"row":27,"column":28},"end":{"row":27,"column":29},"action":"remove","lines":["s"]},{"start":{"row":27,"column":27},"end":{"row":27,"column":28},"action":"remove","lines":["i"]},{"start":{"row":27,"column":26},"end":{"row":27,"column":27},"action":"remove","lines":["L"]}],[{"start":{"row":27,"column":25},"end":{"row":27,"column":26},"action":"remove","lines":[" "],"id":499},{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"remove","lines":["t"]},{"start":{"row":27,"column":23},"end":{"row":27,"column":24},"action":"remove","lines":["n"]},{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"remove","lines":["i"]},{"start":{"row":27,"column":21},"end":{"row":27,"column":22},"action":"remove","lines":["r"]},{"start":{"row":27,"column":20},"end":{"row":27,"column":21},"action":"remove","lines":["P"]},{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"remove","lines":[" "]},{"start":{"row":27,"column":18},"end":{"row":27,"column":19},"action":"remove","lines":["."]},{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"remove","lines":["1"]},{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"remove","lines":["\""]},{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"remove","lines":[" "]}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["        cout << \"Please choose from the options below\" << endl;",""],"id":500},{"start":{"row":25,"column":5},"end":{"row":26,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":25,"column":5},"end":{"row":25,"column":13},"action":"remove","lines":["        "],"id":501},{"start":{"row":25,"column":5},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"insert","lines":["    "],"id":502}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"remove","lines":["    double userHours;",""],"id":503},{"start":{"row":9,"column":28},"end":{"row":10,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":9,"column":28},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":504},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":8,"column":19},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":505},{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"insert","lines":["    "]},{"start":{"row":9,"column":4},"end":{"row":9,"column":5},"action":"insert","lines":["i"]},{"start":{"row":9,"column":5},"end":{"row":9,"column":6},"action":"insert","lines":["n"]},{"start":{"row":9,"column":6},"end":{"row":9,"column":7},"action":"insert","lines":["t"]}],[{"start":{"row":9,"column":7},"end":{"row":9,"column":8},"action":"insert","lines":[" "],"id":506}],[{"start":{"row":18,"column":4},"end":{"row":18,"column":8},"action":"remove","lines":["    "],"id":507},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""]},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""]},{"start":{"row":15,"column":125},"end":{"row":16,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":9,"column":8},"end":{"row":9,"column":9},"action":"insert","lines":["v"],"id":508},{"start":{"row":9,"column":9},"end":{"row":9,"column":10},"action":"insert","lines":["e"]},{"start":{"row":9,"column":10},"end":{"row":9,"column":11},"action":"insert","lines":["c"]},{"start":{"row":9,"column":11},"end":{"row":9,"column":12},"action":"insert","lines":["t"]},{"start":{"row":9,"column":12},"end":{"row":9,"column":13},"action":"insert","lines":["o"]},{"start":{"row":9,"column":13},"end":{"row":9,"column":14},"action":"insert","lines":["r"]},{"start":{"row":9,"column":14},"end":{"row":9,"column":15},"action":"insert","lines":["N"]},{"start":{"row":9,"column":15},"end":{"row":9,"column":16},"action":"insert","lines":["u"]},{"start":{"row":9,"column":16},"end":{"row":9,"column":17},"action":"insert","lines":["m"]}],[{"start":{"row":9,"column":17},"end":{"row":9,"column":18},"action":"insert","lines":[";"],"id":509}],[{"start":{"row":9,"column":17},"end":{"row":9,"column":18},"action":"remove","lines":[";"],"id":510}],[{"start":{"row":9,"column":17},"end":{"row":9,"column":18},"action":"insert","lines":[" "],"id":511},{"start":{"row":9,"column":18},"end":{"row":9,"column":19},"action":"insert","lines":["="]}],[{"start":{"row":9,"column":19},"end":{"row":9,"column":20},"action":"insert","lines":[" "],"id":512},{"start":{"row":9,"column":20},"end":{"row":9,"column":21},"action":"insert","lines":["0"]},{"start":{"row":9,"column":21},"end":{"row":9,"column":22},"action":"insert","lines":[";"]}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":26},"action":"remove","lines":["Location"],"id":513},{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["N"]},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["a"]},{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"insert","lines":["m"]},{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"insert","lines":["e"]}],[{"start":{"row":19,"column":18},"end":{"row":19,"column":26},"action":"remove","lines":["Latitude"],"id":514},{"start":{"row":19,"column":18},"end":{"row":19,"column":19},"action":"insert","lines":["F"]},{"start":{"row":19,"column":19},"end":{"row":19,"column":20},"action":"insert","lines":["a"]},{"start":{"row":19,"column":20},"end":{"row":19,"column":21},"action":"insert","lines":["t"]}],[{"start":{"row":19,"column":21},"end":{"row":19,"column":22},"action":"insert","lines":[" "],"id":515},{"start":{"row":19,"column":22},"end":{"row":19,"column":23},"action":"insert","lines":["("]},{"start":{"row":19,"column":23},"end":{"row":19,"column":24},"action":"insert","lines":["g"]},{"start":{"row":19,"column":24},"end":{"row":19,"column":25},"action":"insert","lines":[")"]}],[{"start":{"row":20,"column":18},"end":{"row":20,"column":27},"action":"remove","lines":["Longitude"],"id":516},{"start":{"row":20,"column":18},"end":{"row":20,"column":19},"action":"insert","lines":["S"]},{"start":{"row":20,"column":19},"end":{"row":20,"column":20},"action":"insert","lines":["u"]},{"start":{"row":20,"column":20},"end":{"row":20,"column":21},"action":"insert","lines":["g"]},{"start":{"row":20,"column":21},"end":{"row":20,"column":22},"action":"insert","lines":["a"]},{"start":{"row":20,"column":22},"end":{"row":20,"column":23},"action":"insert","lines":["r"]},{"start":{"row":20,"column":23},"end":{"row":20,"column":24},"action":"insert","lines":["s"]}],[{"start":{"row":20,"column":24},"end":{"row":20,"column":25},"action":"insert","lines":[" "],"id":517},{"start":{"row":20,"column":25},"end":{"row":20,"column":26},"action":"insert","lines":["("]},{"start":{"row":20,"column":26},"end":{"row":20,"column":27},"action":"insert","lines":["g"]},{"start":{"row":20,"column":27},"end":{"row":20,"column":28},"action":"insert","lines":[")"]}],[{"start":{"row":20,"column":54},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":518},{"start":{"row":21,"column":0},"end":{"row":21,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":21,"column":8},"end":{"row":22,"column":0},"action":"insert","lines":["        cout << \" Sugars (g): \" << location.longitude;",""],"id":519}],[{"start":{"row":21,"column":12},"end":{"row":21,"column":16},"action":"remove","lines":["    "],"id":520},{"start":{"row":21,"column":8},"end":{"row":21,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":21,"column":54},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":521},{"start":{"row":22,"column":0},"end":{"row":22,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":22,"column":8},"end":{"row":23,"column":0},"action":"insert","lines":["        cout << \" Sugars (g): \" << location.longitude;",""],"id":522}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":16},"action":"remove","lines":["    "],"id":523},{"start":{"row":22,"column":8},"end":{"row":22,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":22,"column":54},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":524}],[{"start":{"row":22,"column":54},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":525}],[{"start":{"row":22,"column":18},"end":{"row":22,"column":24},"action":"remove","lines":["Sugars"],"id":526},{"start":{"row":22,"column":18},"end":{"row":22,"column":19},"action":"insert","lines":["S"]},{"start":{"row":22,"column":19},"end":{"row":22,"column":20},"action":"insert","lines":["o"]},{"start":{"row":22,"column":20},"end":{"row":22,"column":21},"action":"insert","lines":["d"]},{"start":{"row":22,"column":21},"end":{"row":22,"column":22},"action":"insert","lines":["i"]},{"start":{"row":22,"column":22},"end":{"row":22,"column":23},"action":"insert","lines":["u"]},{"start":{"row":22,"column":23},"end":{"row":22,"column":24},"action":"insert","lines":["m"]}],[{"start":{"row":22,"column":26},"end":{"row":22,"column":27},"action":"insert","lines":["m"],"id":527}],[{"start":{"row":21,"column":18},"end":{"row":21,"column":24},"action":"remove","lines":["Sugars"],"id":528},{"start":{"row":21,"column":18},"end":{"row":21,"column":19},"action":"insert","lines":["P"]},{"start":{"row":21,"column":19},"end":{"row":21,"column":20},"action":"insert","lines":["o"]}],[{"start":{"row":21,"column":19},"end":{"row":21,"column":20},"action":"remove","lines":["o"],"id":529}],[{"start":{"row":21,"column":19},"end":{"row":21,"column":20},"action":"insert","lines":["r"],"id":530},{"start":{"row":21,"column":20},"end":{"row":21,"column":21},"action":"insert","lines":["o"]},{"start":{"row":21,"column":21},"end":{"row":21,"column":22},"action":"insert","lines":["t"]},{"start":{"row":21,"column":22},"end":{"row":21,"column":23},"action":"insert","lines":["e"]}],[{"start":{"row":21,"column":23},"end":{"row":21,"column":24},"action":"insert","lines":["i"],"id":531},{"start":{"row":21,"column":24},"end":{"row":21,"column":25},"action":"insert","lines":["n"]}],[{"start":{"row":19,"column":41},"end":{"row":19,"column":49},"action":"remove","lines":["latitude"],"id":532},{"start":{"row":19,"column":41},"end":{"row":19,"column":42},"action":"insert","lines":["f"]},{"start":{"row":19,"column":42},"end":{"row":19,"column":43},"action":"insert","lines":["a"]},{"start":{"row":19,"column":43},"end":{"row":19,"column":44},"action":"insert","lines":["t"]}],[{"start":{"row":20,"column":44},"end":{"row":20,"column":53},"action":"remove","lines":["longitude"],"id":533},{"start":{"row":20,"column":44},"end":{"row":20,"column":45},"action":"insert","lines":["j"]},{"start":{"row":20,"column":45},"end":{"row":20,"column":46},"action":"insert","lines":["s"]}],[{"start":{"row":20,"column":45},"end":{"row":20,"column":46},"action":"remove","lines":["s"],"id":534},{"start":{"row":20,"column":44},"end":{"row":20,"column":45},"action":"remove","lines":["j"]}],[{"start":{"row":20,"column":44},"end":{"row":20,"column":45},"action":"insert","lines":["s"],"id":535},{"start":{"row":20,"column":45},"end":{"row":20,"column":46},"action":"insert","lines":["u"]},{"start":{"row":20,"column":46},"end":{"row":20,"column":47},"action":"insert","lines":["g"]},{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"insert","lines":["a"]},{"start":{"row":20,"column":48},"end":{"row":20,"column":49},"action":"insert","lines":["r"]},{"start":{"row":20,"column":49},"end":{"row":20,"column":50},"action":"insert","lines":["s"]}],[{"start":{"row":21,"column":45},"end":{"row":21,"column":54},"action":"remove","lines":["longitude"],"id":536},{"start":{"row":21,"column":45},"end":{"row":21,"column":46},"action":"insert","lines":["p"]},{"start":{"row":21,"column":46},"end":{"row":21,"column":47},"action":"insert","lines":["r"]},{"start":{"row":21,"column":47},"end":{"row":21,"column":48},"action":"insert","lines":["o"]},{"start":{"row":21,"column":48},"end":{"row":21,"column":49},"action":"insert","lines":["t"]},{"start":{"row":21,"column":49},"end":{"row":21,"column":50},"action":"insert","lines":["e"]},{"start":{"row":21,"column":50},"end":{"row":21,"column":51},"action":"insert","lines":["i"]},{"start":{"row":21,"column":51},"end":{"row":21,"column":52},"action":"insert","lines":["n"]}],[{"start":{"row":22,"column":45},"end":{"row":22,"column":54},"action":"remove","lines":["longitude"],"id":537},{"start":{"row":22,"column":45},"end":{"row":22,"column":46},"action":"insert","lines":["s"]},{"start":{"row":22,"column":46},"end":{"row":22,"column":47},"action":"insert","lines":["o"]},{"start":{"row":22,"column":47},"end":{"row":22,"column":48},"action":"insert","lines":["d"]},{"start":{"row":22,"column":48},"end":{"row":22,"column":49},"action":"insert","lines":["i"]},{"start":{"row":22,"column":49},"end":{"row":22,"column":50},"action":"insert","lines":["u"]},{"start":{"row":22,"column":50},"end":{"row":22,"column":51},"action":"insert","lines":["m"]}],[{"start":{"row":18,"column":29},"end":{"row":18,"column":37},"action":"remove","lines":["location"],"id":538},{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":["f"]},{"start":{"row":18,"column":30},"end":{"row":18,"column":31},"action":"insert","lines":["o"]},{"start":{"row":18,"column":31},"end":{"row":18,"column":32},"action":"insert","lines":["o"]},{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"insert","lines":["d"]},{"start":{"row":18,"column":33},"end":{"row":18,"column":34},"action":"insert","lines":["I"]},{"start":{"row":18,"column":34},"end":{"row":18,"column":35},"action":"insert","lines":["t"]},{"start":{"row":18,"column":35},"end":{"row":18,"column":36},"action":"insert","lines":["e"]},{"start":{"row":18,"column":36},"end":{"row":18,"column":37},"action":"insert","lines":["m"]},{"start":{"row":18,"column":37},"end":{"row":18,"column":38},"action":"insert","lines":["s"]}],[{"start":{"row":18,"column":37},"end":{"row":18,"column":38},"action":"remove","lines":["s"],"id":539}],[{"start":{"row":19,"column":32},"end":{"row":19,"column":40},"action":"remove","lines":["location"],"id":540},{"start":{"row":19,"column":32},"end":{"row":19,"column":33},"action":"insert","lines":["f"]},{"start":{"row":19,"column":33},"end":{"row":19,"column":34},"action":"insert","lines":["o"]},{"start":{"row":19,"column":34},"end":{"row":19,"column":35},"action":"insert","lines":["o"]},{"start":{"row":19,"column":35},"end":{"row":19,"column":36},"action":"insert","lines":["d"]},{"start":{"row":19,"column":36},"end":{"row":19,"column":37},"action":"insert","lines":["I"]},{"start":{"row":19,"column":37},"end":{"row":19,"column":38},"action":"insert","lines":["t"]},{"start":{"row":19,"column":38},"end":{"row":19,"column":39},"action":"insert","lines":["e"]},{"start":{"row":19,"column":39},"end":{"row":19,"column":40},"action":"insert","lines":["m"]}],[{"start":{"row":20,"column":35},"end":{"row":20,"column":43},"action":"remove","lines":["location"],"id":541},{"start":{"row":20,"column":35},"end":{"row":20,"column":43},"action":"insert","lines":["foodItem"]}],[{"start":{"row":21,"column":36},"end":{"row":21,"column":44},"action":"remove","lines":["location"],"id":542},{"start":{"row":21,"column":36},"end":{"row":21,"column":44},"action":"insert","lines":["foodItem"]}],[{"start":{"row":22,"column":36},"end":{"row":22,"column":44},"action":"remove","lines":["location"],"id":543},{"start":{"row":22,"column":36},"end":{"row":22,"column":44},"action":"insert","lines":["foodItem"]}],[{"start":{"row":10,"column":28},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":544},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]},{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":["v"]},{"start":{"row":11,"column":5},"end":{"row":11,"column":6},"action":"insert","lines":["e"]},{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["c"]},{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":["t"]},{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["o"]},{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["r"]}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":[" "],"id":545}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"remove","lines":[" "],"id":546}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":["<"],"id":547}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["f"],"id":548},{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":["o"]},{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":["o"]},{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":["d"]}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":16},"action":"insert","lines":["D"],"id":549},{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["i"]},{"start":{"row":11,"column":17},"end":{"row":11,"column":18},"action":"insert","lines":["s"]},{"start":{"row":11,"column":18},"end":{"row":11,"column":19},"action":"insert","lines":[">"]}],[{"start":{"row":11,"column":19},"end":{"row":11,"column":20},"action":"insert","lines":[" "],"id":550},{"start":{"row":11,"column":20},"end":{"row":11,"column":21},"action":"insert","lines":["f"]},{"start":{"row":11,"column":21},"end":{"row":11,"column":22},"action":"insert","lines":["o"]},{"start":{"row":11,"column":22},"end":{"row":11,"column":23},"action":"insert","lines":["o"]},{"start":{"row":11,"column":23},"end":{"row":11,"column":24},"action":"insert","lines":["d"]},{"start":{"row":11,"column":24},"end":{"row":11,"column":25},"action":"insert","lines":["I"]},{"start":{"row":11,"column":25},"end":{"row":11,"column":26},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":26},"end":{"row":11,"column":27},"action":"insert","lines":["e"],"id":551},{"start":{"row":11,"column":27},"end":{"row":11,"column":28},"action":"insert","lines":["m"]},{"start":{"row":11,"column":28},"end":{"row":11,"column":29},"action":"insert","lines":["s"]},{"start":{"row":11,"column":29},"end":{"row":11,"column":30},"action":"insert","lines":[";"]}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["    vector<foodDis> foodItems;",""],"id":552},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["    vector<foodItem> dataFood = getFoodData();",""]}],[{"start":{"row":37,"column":48},"end":{"row":37,"column":61},"action":"remove","lines":["dataEmployees"],"id":553},{"start":{"row":37,"column":48},"end":{"row":37,"column":49},"action":"insert","lines":["f"]},{"start":{"row":37,"column":49},"end":{"row":37,"column":50},"action":"insert","lines":["o"]},{"start":{"row":37,"column":50},"end":{"row":37,"column":51},"action":"insert","lines":["o"]},{"start":{"row":37,"column":51},"end":{"row":37,"column":52},"action":"insert","lines":["d"]},{"start":{"row":37,"column":52},"end":{"row":37,"column":53},"action":"insert","lines":["I"]},{"start":{"row":37,"column":53},"end":{"row":37,"column":54},"action":"insert","lines":["t"]}],[{"start":{"row":37,"column":54},"end":{"row":37,"column":55},"action":"insert","lines":["e"],"id":554},{"start":{"row":37,"column":55},"end":{"row":37,"column":56},"action":"insert","lines":["m"]},{"start":{"row":37,"column":56},"end":{"row":37,"column":57},"action":"insert","lines":["."]},{"start":{"row":37,"column":57},"end":{"row":37,"column":58},"action":"insert","lines":["s"]},{"start":{"row":37,"column":58},"end":{"row":37,"column":59},"action":"insert","lines":["i"]},{"start":{"row":37,"column":59},"end":{"row":37,"column":60},"action":"insert","lines":["z"]},{"start":{"row":37,"column":60},"end":{"row":37,"column":61},"action":"insert","lines":["e"]}],[{"start":{"row":37,"column":60},"end":{"row":37,"column":61},"action":"remove","lines":["e"],"id":555},{"start":{"row":37,"column":59},"end":{"row":37,"column":60},"action":"remove","lines":["z"]},{"start":{"row":37,"column":58},"end":{"row":37,"column":59},"action":"remove","lines":["i"]},{"start":{"row":37,"column":57},"end":{"row":37,"column":58},"action":"remove","lines":["s"]},{"start":{"row":37,"column":56},"end":{"row":37,"column":57},"action":"remove","lines":["."]},{"start":{"row":37,"column":55},"end":{"row":37,"column":56},"action":"remove","lines":["m"]},{"start":{"row":37,"column":54},"end":{"row":37,"column":55},"action":"remove","lines":["e"]},{"start":{"row":37,"column":53},"end":{"row":37,"column":54},"action":"remove","lines":["t"]},{"start":{"row":37,"column":52},"end":{"row":37,"column":53},"action":"remove","lines":["I"]},{"start":{"row":37,"column":51},"end":{"row":37,"column":52},"action":"remove","lines":["d"]},{"start":{"row":37,"column":50},"end":{"row":37,"column":51},"action":"remove","lines":["o"]},{"start":{"row":37,"column":49},"end":{"row":37,"column":50},"action":"remove","lines":["o"]},{"start":{"row":37,"column":48},"end":{"row":37,"column":49},"action":"remove","lines":["f"]}],[{"start":{"row":37,"column":33},"end":{"row":37,"column":38},"action":"remove","lines":["Wages"],"id":556},{"start":{"row":37,"column":33},"end":{"row":37,"column":34},"action":"insert","lines":["T"]},{"start":{"row":37,"column":34},"end":{"row":37,"column":35},"action":"insert","lines":["o"]},{"start":{"row":37,"column":35},"end":{"row":37,"column":36},"action":"insert","lines":["t"]},{"start":{"row":37,"column":36},"end":{"row":37,"column":37},"action":"insert","lines":["a"]},{"start":{"row":37,"column":37},"end":{"row":37,"column":38},"action":"insert","lines":["l"]}],[{"start":{"row":37,"column":38},"end":{"row":37,"column":39},"action":"insert","lines":[" "],"id":557},{"start":{"row":37,"column":39},"end":{"row":37,"column":40},"action":"insert","lines":["N"]},{"start":{"row":37,"column":40},"end":{"row":37,"column":41},"action":"insert","lines":["u"]},{"start":{"row":37,"column":41},"end":{"row":37,"column":42},"action":"insert","lines":["t"]},{"start":{"row":37,"column":42},"end":{"row":37,"column":43},"action":"insert","lines":["r"]},{"start":{"row":37,"column":43},"end":{"row":37,"column":44},"action":"insert","lines":["i"]},{"start":{"row":37,"column":44},"end":{"row":37,"column":45},"action":"insert","lines":["t"]},{"start":{"row":37,"column":45},"end":{"row":37,"column":46},"action":"insert","lines":["o"]},{"start":{"row":37,"column":46},"end":{"row":37,"column":47},"action":"insert","lines":["n"]}],[{"start":{"row":37,"column":47},"end":{"row":37,"column":48},"action":"insert","lines":[" "],"id":558}],[{"start":{"row":37,"column":47},"end":{"row":37,"column":48},"action":"remove","lines":[" "],"id":559}],[{"start":{"row":37,"column":63},"end":{"row":37,"column":72},"action":"remove","lines":["employees"],"id":560},{"start":{"row":37,"column":62},"end":{"row":37,"column":63},"action":"remove","lines":[" "]}],[{"start":{"row":37,"column":62},"end":{"row":37,"column":63},"action":"insert","lines":["f"],"id":561}],[{"start":{"row":37,"column":62},"end":{"row":37,"column":63},"action":"remove","lines":["f"],"id":562}],[{"start":{"row":37,"column":62},"end":{"row":37,"column":63},"action":"insert","lines":["I"],"id":563},{"start":{"row":37,"column":63},"end":{"row":37,"column":64},"action":"insert","lines":["t"]},{"start":{"row":37,"column":64},"end":{"row":37,"column":65},"action":"insert","lines":["e"]},{"start":{"row":37,"column":65},"end":{"row":37,"column":66},"action":"insert","lines":["m"]},{"start":{"row":37,"column":66},"end":{"row":37,"column":67},"action":"insert","lines":["s"]}],[{"start":{"row":39,"column":27},"end":{"row":39,"column":32},"action":"remove","lines":["Wages"],"id":564},{"start":{"row":39,"column":27},"end":{"row":39,"column":28},"action":"insert","lines":["N"]},{"start":{"row":39,"column":28},"end":{"row":39,"column":29},"action":"insert","lines":["u"]},{"start":{"row":39,"column":29},"end":{"row":39,"column":30},"action":"insert","lines":["t"]}],[{"start":{"row":39,"column":30},"end":{"row":39,"column":31},"action":"insert","lines":["r"],"id":565},{"start":{"row":39,"column":31},"end":{"row":39,"column":32},"action":"insert","lines":["i"]},{"start":{"row":39,"column":32},"end":{"row":39,"column":33},"action":"insert","lines":["t"]},{"start":{"row":39,"column":33},"end":{"row":39,"column":34},"action":"insert","lines":["i"]},{"start":{"row":39,"column":34},"end":{"row":39,"column":35},"action":"insert","lines":["o"]},{"start":{"row":39,"column":35},"end":{"row":39,"column":36},"action":"insert","lines":["n"]}],[{"start":{"row":39,"column":38},"end":{"row":39,"column":39},"action":"remove","lines":["$"],"id":566}],[{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"remove","lines":["#include <iostream>","#include <cmath>","#include <vector>","#include <string>","","using namespace std;","","int main() {","    int userChoice;","    int vectorNum = 0;","    string iUser = \"<User>\";","    vector<foodItem> dataFood = getFoodData();","    ","    while (true) {","    ","    cout << \"| Nutrition Tracker  |\" << endl;","    cout << \"Greetings \" << iUser << \", this program displays a list of food items and calculates nutrition values.\" << endl;","    for (const Location& location : locations) {","        cout << vectorNum++ << \".\";","        cout << \" Name: \" << foodItem.name;","        cout << \" Fat (g): \" << foodItem.fat;","        cout << \" Sugars (g): \" << foodItem.sugars;","        cout << \" Protein (g): \" << foodItem.protein;","        cout << \" Sodium (mg): \" << foodItem.sodium;","        cout << endl;","    }","        cout << endl;","        cout << \"Make Selection in list form: \";","        cin >> userChoice;","        cout << endl;","","        if (userChoice == 1) {","            cout << \"Printing Employee list of \" << dataEmployees << \" employees\" << endl;","            // Print the employee list here","            cout << endl;","        } else if (userChoice == 2) {","            totalWages = 0.0;","            cout << \"Calculating Total Nutriton for \" <<  << \"Items\" << endl;","            // Calculate wages for each employee here","            cout << \"Total Nutrition: \" << totalWages << endl;","        } else if (userChoice == 3) {","            cout << \"Exiting Program\" << endl;","            break;","        } else {","            cout << \"Invalid Selection. Please Try Again\" << endl;","        }","","        cout << endl;","        cout << \"1. Return to Menu\" << endl;","        cout << \"2. Exit Program\" << endl;","        cout << \"Make Selection: \";","        cin >> userChoice;","        cout << endl;","","        if (userChoice == 2) {","            cout << \"Exiting Program\" << endl;","            break;","        }","    }","","    return 0;","}",""],"id":567},{"start":{"row":0,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["#include <iostream>","#include <vector>","#include <string>","","using namespace std;","","struct FoodItem {","    string name;","    double fat;","    double sugars;","    double protein;","    double sodium;","};","","vector<FoodItem> getFoodData() {","    // Function to retrieve and return food data from a data source","    // Replace this with your actual implementation","    vector<FoodItem> foodData;","    // Add food items to the foodData vector","    return foodData;","}","","int main() {","    int userChoice;","    string iUser = \"<User>\";","    vector<FoodItem> dataFood = getFoodData();","","    while (true) {","        cout << \"| Nutrition Tracker |\" << endl;","        cout << \"Greetings \" << iUser << \", this program displays a list of food items and calculates nutrition values.\" << endl;","        cout << \"Please choose an option below\" << endl;","        cout << \"1. Print List of Food Items\" << endl;","        cout << \"2. Calculate Total Nutrition\" << endl;","        cout << \"3. Exit Application\" << endl << endl;","        cout << \"Make Selection: \";","        cin >> userChoice;","        cout << endl;","","        if (userChoice == 1) {","            cout << \"Printing Food Item list of \" << dataFood.size() << \" items\" << endl;","            int vectorNum = 1;","            for (const FoodItem& foodItem : dataFood) {","                cout << vectorNum++ << \". \";","                cout << \"Name: \" << foodItem.name << endl;","                cout << \"Fat (g): \" << foodItem.fat << endl;","                cout << \"Sugars (g): \" << foodItem.sugars << endl;","                cout << \"Protein (g): \" << foodItem.protein << endl;","                cout << \"Sodium (mg): \" << foodItem.sodium << endl;","                cout << endl;","            }","            cout << endl;","        } else if (userChoice == 2) {","            double totalFat = 0.0;","            double totalSugars = 0.0;","            double totalProtein = 0.0;","            double totalSodium = 0.0;","            ","            cout << \"Calculating Total Nutrition for \" << dataFood.size() << \" items\" << endl;","            ","            for (const FoodItem& foodItem : dataFood) {","                totalFat += foodItem.fat;","                totalSugars += foodItem.sugars;","                totalProtein += foodItem.protein;","                totalSodium += foodItem.sodium;","            }","            ","            cout << \"Total Fat (g): \" << totalFat << endl;","            cout << \"Total Sugars (g): \" << totalSugars << endl;","            cout << \"Total Protein (g): \" << totalProtein << endl;","            cout << \"Total Sodium (mg): \" << totalSodium << endl;","            cout << endl;","        } else if (userChoice == 3) {","            cout << \"Exiting Program\" << endl;","            break;","        } else {","            cout << \"Invalid Selection. Please Try Again\" << endl;","        }","","        cout << endl;","        cout << \"1. Return to Menu\" << endl;","        cout << \"2. Exit Program\" << endl;","        cout << \"Make Selection: \";","        cin >> userChoice;","        cout << endl;","","        if (userChoice == 2) {","            cout << \"Exiting Program\" << endl;","            break;","        }","    }","","    return 0;","}",""]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":6},"action":"remove","lines":["struct"],"id":568},{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["c"]},{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["l"]},{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":["a"]},{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":["s"]},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["s"]}],[{"start":{"row":6,"column":16},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":569},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]},{"start":{"row":7,"column":4},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]},{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"insert","lines":["p"]},{"start":{"row":8,"column":5},"end":{"row":8,"column":6},"action":"insert","lines":["r"]},{"start":{"row":8,"column":6},"end":{"row":8,"column":7},"action":"insert","lines":["i"]}],[{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"insert","lines":["v"],"id":570},{"start":{"row":8,"column":8},"end":{"row":8,"column":9},"action":"insert","lines":["a"]},{"start":{"row":8,"column":9},"end":{"row":8,"column":10},"action":"insert","lines":["t"]},{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":["e"]},{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":[":"]}],[{"start":{"row":6,"column":0},"end":{"row":14,"column":2},"action":"remove","lines":["class FoodItem {","    ","    private:","    string name;","    double fat;","    double sugars;","    double protein;","    double sodium;","};"],"id":571},{"start":{"row":6,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["class FoodItem {","private:","    string name;","    double fat;","    double sugars;","    double protein;","    double sodium;","","public:","    void setName(const string& n) {","        name = n;","    }","","    string getName() const {","        return name;","    }","","    void setFat(double f) {","        if (f >= 0.0) {","            fat = f;","        } else {","            cout << \"Invalid value for fat\" << endl;","            fat = 0.0;","        }","    }","","    double getFat() const {","        return fat;","    }","","    void setSugars(double s) {","        if (s >= 0.0) {","            sugars = s;","        } else {","            cout << \"Invalid value for sugars\" << endl;","            sugars = 0.0;","        }","    }","","    double getSugars() const {","        return sugars;","    }","","    void setProtein(double p) {","        if (p >= 0.0) {","            protein = p;","        } else {","            cout << \"Invalid value for protein\" << endl;","            protein = 0.0;","        }","    }","","    double getProtein() const {","        return protein;","    }","","    void setSodium(double s) {","        if (s >= 0.0) {","            sodium = s;","        } else {","            cout << \"Invalid value for sodium\" << endl;","            sodium = 0.0;","        }","    }","","    double getSodium() const {","        return sodium;","    }","};",""]}],[{"start":{"row":77,"column":0},"end":{"row":83,"column":1},"action":"remove","lines":["vector<FoodItem> getFoodData() {","    // Function to retrieve and return food data from a data source","    // Replace this with your actual implementation","    vector<FoodItem> foodData;","    // Add food items to the foodData vector","    return foodData;","}"],"id":572},{"start":{"row":77,"column":0},"end":{"row":116,"column":1},"action":"insert","lines":["vector<Employee> getEmployees() {","    vector<Employee> employees;","    ","    Employee emp0;","    emp0.setName(\"Tim Roberts\");","    emp0.setTitle(\"Driver\");","    emp0.setWages(15.0);","    emp0.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp0);","","    Employee emp1;","    emp1.setName(\"Matt Jones\");","    emp1.setTitle(\"Sales Representative\");","    emp1.setWages(15.0);","    emp1.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp1);","","    Employee emp2;","    emp2.setName(\"Mike Ehrmantraut\");","    emp2.setTitle(\"Security Consultant\");","    emp2.setWages(25.0);","    emp2.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp2);","","    Employee emp3;","    emp3.setName(\"Saul Goodman\");","    emp3.setTitle(\"Legal Consultant\");","    emp3.setWages(35.0);","    emp3.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp3);","","    Employee emp4;","    emp4.setName(\"Walter White\");","    emp4.setTitle(\"Head Chef\");","    emp4.setWages(40.0);","    emp4.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp4);","    ","    return employees;","}"]}],[{"start":{"row":115,"column":11},"end":{"row":115,"column":20},"action":"remove","lines":["employees"],"id":573},{"start":{"row":115,"column":11},"end":{"row":115,"column":12},"action":"insert","lines":["f"]},{"start":{"row":115,"column":12},"end":{"row":115,"column":13},"action":"insert","lines":["o"]},{"start":{"row":115,"column":13},"end":{"row":115,"column":14},"action":"insert","lines":["o"]},{"start":{"row":115,"column":14},"end":{"row":115,"column":15},"action":"insert","lines":["d"]},{"start":{"row":115,"column":15},"end":{"row":115,"column":16},"action":"insert","lines":["I"]},{"start":{"row":115,"column":16},"end":{"row":115,"column":17},"action":"insert","lines":["t"]},{"start":{"row":115,"column":17},"end":{"row":115,"column":18},"action":"insert","lines":["e"]}],[{"start":{"row":115,"column":18},"end":{"row":115,"column":19},"action":"insert","lines":["m"],"id":574},{"start":{"row":115,"column":19},"end":{"row":115,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":77,"column":0},"end":{"row":117,"column":0},"action":"remove","lines":["vector<Employee> getEmployees() {","    vector<Employee> employees;","    ","    Employee emp0;","    emp0.setName(\"Tim Roberts\");","    emp0.setTitle(\"Driver\");","    emp0.setWages(15.0);","    emp0.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp0);","","    Employee emp1;","    emp1.setName(\"Matt Jones\");","    emp1.setTitle(\"Sales Representative\");","    emp1.setWages(15.0);","    emp1.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp1);","","    Employee emp2;","    emp2.setName(\"Mike Ehrmantraut\");","    emp2.setTitle(\"Security Consultant\");","    emp2.setWages(25.0);","    emp2.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp2);","","    Employee emp3;","    emp3.setName(\"Saul Goodman\");","    emp3.setTitle(\"Legal Consultant\");","    emp3.setWages(35.0);","    emp3.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp3);","","    Employee emp4;","    emp4.setName(\"Walter White\");","    emp4.setTitle(\"Head Chef\");","    emp4.setWages(40.0);","    emp4.setHours(0.0); // Set initial hours to 0","    employees.push_back(emp4);","    ","    return foodItems;","}",""],"id":575},{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":148,"column":0},"action":"remove","lines":["#include <iostream>","#include <vector>","#include <string>","","using namespace std;","","class FoodItem {","private:","    string name;","    double fat;","    double sugars;","    double protein;","    double sodium;","","public:","    void setName(const string& n) {","        name = n;","    }","","    string getName() const {","        return name;","    }","","    void setFat(double f) {","        if (f >= 0.0) {","            fat = f;","        } else {","            cout << \"Invalid value for fat\" << endl;","            fat = 0.0;","        }","    }","","    double getFat() const {","        return fat;","    }","","    void setSugars(double s) {","        if (s >= 0.0) {","            sugars = s;","        } else {","            cout << \"Invalid value for sugars\" << endl;","            sugars = 0.0;","        }","    }","","    double getSugars() const {","        return sugars;","    }","","    void setProtein(double p) {","        if (p >= 0.0) {","            protein = p;","        } else {","            cout << \"Invalid value for protein\" << endl;","            protein = 0.0;","        }","    }","","    double getProtein() const {","        return protein;","    }","","    void setSodium(double s) {","        if (s >= 0.0) {","            sodium = s;","        } else {","            cout << \"Invalid value for sodium\" << endl;","            sodium = 0.0;","        }","    }","","    double getSodium() const {","        return sodium;","    }","};","","","int main() {","    int userChoice;","    string iUser = \"<User>\";","    vector<FoodItem> dataFood = getFoodData();","","    while (true) {","        cout << \"| Nutrition Tracker |\" << endl;","        cout << \"Greetings \" << iUser << \", this program displays a list of food items and calculates nutrition values.\" << endl;","        cout << \"Please choose an option below\" << endl;","        cout << \"1. Print List of Food Items\" << endl;","        cout << \"2. Calculate Total Nutrition\" << endl;","        cout << \"3. Exit Application\" << endl << endl;","        cout << \"Make Selection: \";","        cin >> userChoice;","        cout << endl;","","        if (userChoice == 1) {","            cout << \"Printing Food Item list of \" << dataFood.size() << \" items\" << endl;","            int vectorNum = 1;","            for (const FoodItem& foodItem : dataFood) {","                cout << vectorNum++ << \". \";","                cout << \"Name: \" << foodItem.name << endl;","                cout << \"Fat (g): \" << foodItem.fat << endl;","                cout << \"Sugars (g): \" << foodItem.sugars << endl;","                cout << \"Protein (g): \" << foodItem.protein << endl;","                cout << \"Sodium (mg): \" << foodItem.sodium << endl;","                cout << endl;","            }","            cout << endl;","        } else if (userChoice == 2) {","            double totalFat = 0.0;","            double totalSugars = 0.0;","            double totalProtein = 0.0;","            double totalSodium = 0.0;","            ","            cout << \"Calculating Total Nutrition for \" << dataFood.size() << \" items\" << endl;","            ","            for (const FoodItem& foodItem : dataFood) {","                totalFat += foodItem.fat;","                totalSugars += foodItem.sugars;","                totalProtein += foodItem.protein;","                totalSodium += foodItem.sodium;","            }","            ","            cout << \"Total Fat (g): \" << totalFat << endl;","            cout << \"Total Sugars (g): \" << totalSugars << endl;","            cout << \"Total Protein (g): \" << totalProtein << endl;","            cout << \"Total Sodium (mg): \" << totalSodium << endl;","            cout << endl;","        } else if (userChoice == 3) {","            cout << \"Exiting Program\" << endl;","            break;","        } else {","            cout << \"Invalid Selection. Please Try Again\" << endl;","        }","","        cout << endl;","        cout << \"1. Return to Menu\" << endl;","        cout << \"2. Exit Program\" << endl;","        cout << \"Make Selection: \";","        cin >> userChoice;","        cout << endl;","","        if (userChoice == 2) {","            cout << \"Exiting Program\" << endl;","            break;","        }","    }","","    return 0;","}",""],"id":576}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["#include <iostream>","#include \"menu.h\"","","int main() {","    Menu menu;","    FoodItem totalIntake;","","    int option;","    while (true) {","        menu.displayMenu();","        std::cout << \"Enter an option: \";","        std::cin >> option;","","        if (menu.isValidOption(option)) {","            if (option == menu.getFoodItems().size() + 1) {","                break;","            }","","            FoodItem selectedFood = menu.getFoodItem(option);","            totalIntake = totalIntake + selectedFood;","            std::cout << \"Selected: \" << selectedFood.getName() << std::endl;","        } else {","            std::cout << \"Invalid option. Please try again.\" << std::endl;","        }","    }","","    std::cout << \"Total Nutritional Value:\" << std::endl;","    std::cout << \"Calories: \" << totalIntake.getCalories() << std::endl;","    std::cout << \"Total Fat: \" << totalIntake.getTotalFat() << std::endl;","    std::cout << \"Total Sugars: \" << totalIntake.getTotalSugars() << std::endl;","    std::cout << \"Protein: \" << totalIntake.getProtein() << std::endl;","    std::cout << \"Sodium: \" << totalIntake.getSodium() << std::endl;","","    // Check if exceeded recommended intakes","    bool exceededIntake = false;","","    if (totalIntake.getCalories() > 2000) {","        std::cout << \"Exceeded recommended calories intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getTotalFat() > 70) {","        std::cout << \"Exceeded recommended total fat intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getTotalSugars() > 30) {","        std::cout << \"Exceeded recommended total sugars intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getProtein() > 50) {","        std::cout << \"Exceeded recommended protein intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getSodium() > 2300) {","        std::cout << \"Exceeded recommended sodium intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (!exceededIntake) {","        std::cout << \"Congratulations! You have not exceeded any recommended intakes.\" << std::endl;","    }","","    return 0;","}",""],"id":577}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"remove","lines":["#include <iostream>","#include \"menu.h\"","","int main() {","    Menu menu;","    FoodItem totalIntake;","","    int option;","    while (true) {","        menu.displayMenu();","        std::cout << \"Enter an option: \";","        std::cin >> option;","","        if (menu.isValidOption(option)) {","            if (option == menu.getFoodItems().size() + 1) {","                break;","            }","","            FoodItem selectedFood = menu.getFoodItem(option);","            totalIntake = totalIntake + selectedFood;","            std::cout << \"Selected: \" << selectedFood.getName() << std::endl;","        } else {","            std::cout << \"Invalid option. Please try again.\" << std::endl;","        }","    }","","    std::cout << \"Total Nutritional Value:\" << std::endl;","    std::cout << \"Calories: \" << totalIntake.getCalories() << std::endl;","    std::cout << \"Total Fat: \" << totalIntake.getTotalFat() << std::endl;","    std::cout << \"Total Sugars: \" << totalIntake.getTotalSugars() << std::endl;","    std::cout << \"Protein: \" << totalIntake.getProtein() << std::endl;","    std::cout << \"Sodium: \" << totalIntake.getSodium() << std::endl;","","    // Check if exceeded recommended intakes","    bool exceededIntake = false;","","    if (totalIntake.getCalories() > 2000) {","        std::cout << \"Exceeded recommended calories intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getTotalFat() > 70) {","        std::cout << \"Exceeded recommended total fat intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getTotalSugars() > 30) {","        std::cout << \"Exceeded recommended total sugars intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getProtein() > 50) {","        std::cout << \"Exceeded recommended protein intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getSodium() > 2300) {","        std::cout << \"Exceeded recommended sodium intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (!exceededIntake) {","        std::cout << \"Congratulations! You have not exceeded any recommended intakes.\" << std::endl;","    }","","    return 0;","}",""],"id":579},{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["#include <iostream>","#include \"menu.h\"","","int main() {","    Menu menu;","    FoodItem totalIntake;","","    int option;","    while (true) {","        menu.displayMenu();","        std::cout << \"Enter an option: \";","        std::cin >> option;","","        if (menu.isValidOption(option)) {","            if (option == menu.getFoodItems().size() + 1) {","                break;","            }","","            FoodItem selectedFood = menu.getFoodItem(option);","            totalIntake = totalIntake + selectedFood;","            std::cout << \"Selected: \" << selectedFood.getName() << std::endl;","        } else {","            std::cout << \"Invalid option. Please try again.\" << std::endl;","        }","    }","","    std::cout << \"Total Nutritional Value:\" << std::endl;","    std::cout << \"Calories: \" << totalIntake.getCalories() << std::endl;","    std::cout << \"Total Fat: \" << totalIntake.getTotalFat() << std::endl;","    std::cout << \"Total Sugars: \" << totalIntake.getTotalSugars() << std::endl;","    std::cout << \"Protein: \" << totalIntake.getProtein() << std::endl;","    std::cout << \"Sodium: \" << totalIntake.getSodium() << std::endl;","","    // Check if exceeded recommended intakes","    bool exceededIntake = false;","","    if (totalIntake.getCalories() > 2000) {","        std::cout << \"Exceeded recommended calories intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getTotalFat() > 70) {","        std::cout << \"Exceeded recommended total fat intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getTotalSugars() > 30) {","        std::cout << \"Exceeded recommended total sugars intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getProtein() > 50) {","        std::cout << \"Exceeded recommended protein intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (totalIntake.getSodium() > 2300) {","        std::cout << \"Exceeded recommended sodium intake.\" << std::endl;","        exceededIntake = true;","    }","","    if (!exceededIntake) {","        std::cout << \"Congratulations! You have not exceeded any recommended intakes.\" << std::endl;","    }","","    return 0;","}",""]}],[{"start":{"row":14,"column":42},"end":{"row":14,"column":43},"action":"remove","lines":["s"],"id":580}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["            if (option == menu.getFoodItem().size() + 1) {",""],"id":581},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["if (option == menu.getFoodItem(option).size() + 1) {",""]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":582}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":8},"action":"insert","lines":["    "],"id":583}],[{"start":{"row":14,"column":8},"end":{"row":14,"column":12},"action":"insert","lines":["    "],"id":584}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["            if (option == menu.getFoodItem(option).size() + 1) {",""],"id":586},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["if (option == menu.getFoodItems().size() + 1) {",""]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":587}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":8},"action":"insert","lines":["    "],"id":588}],[{"start":{"row":14,"column":8},"end":{"row":14,"column":12},"action":"insert","lines":["    "],"id":589}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":43,"column":30},"end":{"row":43,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1689603329735,"hash":"55639c494cb1c1f8eeafb54775de283260e0515b"}